#!/usr/bin/env ruby
require 'youtube_it'

# Since youtube_dl now has options to do this, the other is obselete.
#
def youtube_dl(url)
  puts "resolving #{url}..."
  client = YouTubeIt::Client.new
  begin
    url    = client.videos_by(:query => url).videos.first.player_url unless url =~ /youtube\.com/
    puts "downloading #{url}..."
    system "youtube-dl '#{url}' -t --extract-audio --audio-format 'mp3' --audio-quality 320k"
  rescue
    puts "Couldn't find/download #{url}!"
  end
end


def download(url)
  puts url.inspect
  system "youtube-dl #{url} -t"
  file = `ls *.flv`.chomp
  file = `ls *.mp4`.chomp if file.empty?
  file =~ /(\w+)\-?/
  output = file.gsub(/\.(flv|mp4)/,'.mp3')
  system "ffmpeg -i #{file} -vn -acodec libmp3lame -ab 320k #{output}"
  system "mkdir -p flvs"
  system "mv #{file} flvs/"
end

if ARGV[0] =~ /\.txt/
  input = File.open(ARGV[0])
  input.each_line { |url| youtube_dl(url.chomp) unless url =~ /^#/ }
else
  youtube_dl ARGV[0]
end
